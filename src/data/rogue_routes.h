#include "constants/layouts.h"
#include "constants/maps.h"

#define ROUTE_MAP(map) { .layout=LAYOUT_##map, .group=MAP_GROUP(map), .num=MAP_NUM(map), }
#define ENCOUNTER_MAP(species, map) { .encounterSpecies=species, .layout=LAYOUT_##map, .group=MAP_GROUP(map), .num=MAP_NUM(map), }

const struct RogueRouteData gRogueRouteTable[ROGUE_ROUTE_COUNT] = {
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_FIELD0),
        .wildTypeTable = { TYPE_GRASS, TYPE_NORMAL, TYPE_FLYING }
    },
    {
        .dropRarity = 1,
        .map = ROUTE_MAP(ROGUE_ROUTE_FOREST0),
        .wildTypeTable = { TYPE_BUG, TYPE_GHOST, TYPE_POISON }
    },
    {
        .dropRarity = 2,
        .map = ROUTE_MAP(ROGUE_ROUTE_CAVE0),
        .wildTypeTable = { TYPE_ROCK, TYPE_ICE, TYPE_DRAGON }
    },
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_MOUNTAIN0),
        .wildTypeTable = { TYPE_GROUND, TYPE_FIRE, TYPE_FIGHTING }
    },
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_MOUNTAIN1),
        .wildTypeTable = { TYPE_NORMAL, TYPE_FIRE, TYPE_GHOST }
    },
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_WATER_FRONT0),
        .wildTypeTable = { TYPE_WATER, TYPE_FLYING, TYPE_GRASS }
    },
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_URBAN0),
        .wildTypeTable = { TYPE_STEEL, TYPE_ELECTRIC, TYPE_PSYCHIC }
    }
};

static const struct RogueEncounterMap sRouteMapsSpecial[] = 
{
    ENCOUNTER_MAP(SPECIES_ARTICUNO, ROGUE_SPECIAL_ARTICUNO),
    ENCOUNTER_MAP(SPECIES_ZAPDOS, ROGUE_SPECIAL_ZAPDOS),
    ENCOUNTER_MAP(SPECIES_MOLTRES, ROGUE_SPECIAL_MOLTRES),
    
    ENCOUNTER_MAP(SPECIES_MEWTWO, ROGUE_SPECIAL_MEWTWO),
    ENCOUNTER_MAP(SPECIES_MEW, FARAWAY_ISLAND_INTERIOR),

    ENCOUNTER_MAP(SPECIES_RAIKOU, ROGUE_SPECIAL_RAIKOU),
    ENCOUNTER_MAP(SPECIES_ENTEI, ROGUE_SPECIAL_ENTEI),
    ENCOUNTER_MAP(SPECIES_SUICUNE, ROGUE_SPECIAL_SUICUNE),

    ENCOUNTER_MAP(SPECIES_HO_OH, NAVEL_ROCK_TOP),
    ENCOUNTER_MAP(SPECIES_LUGIA, NAVEL_ROCK_BOTTOM),

    ENCOUNTER_MAP(SPECIES_CELEBI, ROGUE_SPECIAL_CELEBI),

    ENCOUNTER_MAP(SPECIES_REGICE, ISLAND_CAVE),
    ENCOUNTER_MAP(SPECIES_REGIROCK, DESERT_RUINS),
    ENCOUNTER_MAP(SPECIES_REGISTEEL, ANCIENT_TOMB),

    ENCOUNTER_MAP(SPECIES_GROUDON, TERRA_CAVE_END),
    ENCOUNTER_MAP(SPECIES_KYOGRE, MARINE_CAVE_END),
    ENCOUNTER_MAP(SPECIES_RAYQUAZA, SKY_PILLAR_TOP),

    ENCOUNTER_MAP(SPECIES_LATIAS, ROGUE_SOUTHERN_ISLAND_LATIAS),
    ENCOUNTER_MAP(SPECIES_LATIOS, ROGUE_SOUTHERN_ISLAND_LATIOS),

    ENCOUNTER_MAP(SPECIES_JIRACHI, ROGUE_SPECIAL_JIRACHI),
    ENCOUNTER_MAP(SPECIES_DEOXYS, BIRTH_ISLAND_EXTERIOR)
};

const struct RogueEncounterData gRogueSpecialEncounterInfo = 
{
    .mapCount = ARRAY_COUNT(sRouteMapsSpecial),
    .mapTable = sRouteMapsSpecial
};