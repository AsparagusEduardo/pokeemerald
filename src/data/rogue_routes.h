#include "constants/layouts.h"
#include "constants/maps.h"

#define ROUTE_MAP(map) { .layout=LAYOUT_##map, .group=MAP_GROUP(map), .num=MAP_NUM(map), }
#define ENCOUNTER_MAP(species, map) { .encounterSpecies=species, .layout=LAYOUT_##map, .group=MAP_GROUP(map), .num=MAP_NUM(map), }

const struct RogueRouteData gRogueRouteTable[ROGUE_ROUTE_COUNT] = {
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_FIELD0),
        .wildTypeTable = { TYPE_GRASS, TYPE_NORMAL, TYPE_FLYING }
    },
    {
        .dropRarity = 1,
        .map = ROUTE_MAP(ROGUE_ROUTE_FOREST0),
        .wildTypeTable = { TYPE_BUG, TYPE_GHOST, TYPE_POISON }
    },
    {
        .dropRarity = 2,
        .map = ROUTE_MAP(ROGUE_ROUTE_CAVE0),
        .wildTypeTable = { TYPE_ROCK, TYPE_ICE, TYPE_DRAGON }
    },
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_MOUNTAIN0),
        .wildTypeTable = { TYPE_GROUND, TYPE_FIRE, TYPE_FIGHTING }
    },
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_MOUNTAIN1),
#ifdef ROGUE_EXPANSION
        .wildTypeTable = { TYPE_FAIRY, TYPE_DARK, TYPE_PSYCHIC }
#else
        .wildTypeTable = { TYPE_FIRE, TYPE_DARK, TYPE_PSYCHIC }
#endif
    },
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_WATER_FRONT0),
        .wildTypeTable = { TYPE_WATER, TYPE_FLYING, TYPE_GRASS }
    },
    {
        .map = ROUTE_MAP(ROGUE_ROUTE_URBAN0),
        .wildTypeTable = { TYPE_STEEL, TYPE_ELECTRIC, TYPE_PSYCHIC }
    }
};

static const struct RogueEncounterMap sRouteMapsSpecial[] = 
{
    ENCOUNTER_MAP(SPECIES_ARTICUNO, ROGUE_SPECIAL_ARTICUNO),
    ENCOUNTER_MAP(SPECIES_ZAPDOS, ROGUE_SPECIAL_ZAPDOS),
    ENCOUNTER_MAP(SPECIES_MOLTRES, ROGUE_SPECIAL_MOLTRES),
    
    ENCOUNTER_MAP(SPECIES_MEWTWO, ROGUE_SPECIAL_MEWTWO),
    ENCOUNTER_MAP(SPECIES_MEW, FARAWAY_ISLAND_INTERIOR),

    ENCOUNTER_MAP(SPECIES_RAIKOU, ROGUE_SPECIAL_RAIKOU),
    ENCOUNTER_MAP(SPECIES_ENTEI, ROGUE_SPECIAL_ENTEI),
    ENCOUNTER_MAP(SPECIES_SUICUNE, ROGUE_SPECIAL_SUICUNE),

    ENCOUNTER_MAP(SPECIES_HO_OH, NAVEL_ROCK_TOP),
    ENCOUNTER_MAP(SPECIES_LUGIA, NAVEL_ROCK_BOTTOM),

    ENCOUNTER_MAP(SPECIES_CELEBI, ROGUE_SPECIAL_CELEBI),

    ENCOUNTER_MAP(SPECIES_REGICE, ISLAND_CAVE),
    ENCOUNTER_MAP(SPECIES_REGIROCK, DESERT_RUINS),
    ENCOUNTER_MAP(SPECIES_REGISTEEL, ANCIENT_TOMB),

    ENCOUNTER_MAP(SPECIES_GROUDON, TERRA_CAVE_END),
    ENCOUNTER_MAP(SPECIES_KYOGRE, MARINE_CAVE_END),
    ENCOUNTER_MAP(SPECIES_RAYQUAZA, SKY_PILLAR_TOP),

    ENCOUNTER_MAP(SPECIES_LATIAS, ROGUE_SOUTHERN_ISLAND_LATIAS),
    ENCOUNTER_MAP(SPECIES_LATIOS, ROGUE_SOUTHERN_ISLAND_LATIOS),

    ENCOUNTER_MAP(SPECIES_JIRACHI, ROGUE_SPECIAL_JIRACHI),
    ENCOUNTER_MAP(SPECIES_DEOXYS, BIRTH_ISLAND_EXTERIOR),

#ifdef ROGUE_EXPANSION
    ENCOUNTER_MAP(SPECIES_UXIE),
    ENCOUNTER_MAP(SPECIES_MESPRIT),
    ENCOUNTER_MAP(SPECIES_AZELF),
    ENCOUNTER_MAP(SPECIES_DIALGA),
    ENCOUNTER_MAP(SPECIES_PALKIA),
    ENCOUNTER_MAP(SPECIES_HEATRAN),
    ENCOUNTER_MAP(SPECIES_REGIGIGAS),
    ENCOUNTER_MAP(SPECIES_GIRATINA),
    ENCOUNTER_MAP(SPECIES_CRESSELIA),
    ENCOUNTER_MAP(SPECIES_PHIONE),
    ENCOUNTER_MAP(SPECIES_MANAPHY),
    ENCOUNTER_MAP(SPECIES_DARKRAI),
    ENCOUNTER_MAP(SPECIES_SHAYMIN),
    ENCOUNTER_MAP(SPECIES_ARCEUS),

    ENCOUNTER_MAP(SPECIES_VICTINI),
    ENCOUNTER_MAP(SPECIES_COBALION),
    ENCOUNTER_MAP(SPECIES_TERRAKION),
    ENCOUNTER_MAP(SPECIES_VIRIZION),
    ENCOUNTER_MAP(SPECIES_TORNADUS),
    ENCOUNTER_MAP(SPECIES_THUNDURUS),
    ENCOUNTER_MAP(SPECIES_RESHIRAM),
    ENCOUNTER_MAP(SPECIES_ZEKROM),
    ENCOUNTER_MAP(SPECIES_LANDORUS),
    ENCOUNTER_MAP(SPECIES_KYUREM),
    ENCOUNTER_MAP(SPECIES_KELDEO),
    ENCOUNTER_MAP(SPECIES_MELOETTA),
    ENCOUNTER_MAP(SPECIES_GENESECT),

    ENCOUNTER_MAP(SPECIES_XERNEAS),
    ENCOUNTER_MAP(SPECIES_YVELTAL),
    ENCOUNTER_MAP(SPECIES_ZYGARDE),
    ENCOUNTER_MAP(SPECIES_DIANCIE),
    ENCOUNTER_MAP(SPECIES_HOOPA),
    ENCOUNTER_MAP(SPECIES_VOLCANION),
    ENCOUNTER_MAP(
    ENCOUNTER_MAP(SPECIES_TYPE_NULL),
    ENCOUNTER_MAP(SPECIES_SILVALLY),
    ENCOUNTER_MAP(SPECIES_TAPU_KOKO),
    ENCOUNTER_MAP(SPECIES_TAPU_LELE),
    ENCOUNTER_MAP(SPECIES_TAPU_BULU),
    ENCOUNTER_MAP(SPECIES_TAPU_FINI),
    ENCOUNTER_MAP(SPECIES_COSMOG),
    ENCOUNTER_MAP(SPECIES_COSMOEM),
    ENCOUNTER_MAP(SPECIES_SOLGALEO),
    ENCOUNTER_MAP(SPECIES_LUNALA),
    ENCOUNTER_MAP(SPECIES_NIHILEGO),
    ENCOUNTER_MAP(SPECIES_BUZZWOLE),
    ENCOUNTER_MAP(SPECIES_PHEROMOSA),
    ENCOUNTER_MAP(SPECIES_XURKITREE),
    ENCOUNTER_MAP(SPECIES_CELESTEELA),
    ENCOUNTER_MAP(SPECIES_KARTANA),
    ENCOUNTER_MAP(SPECIES_GUZZLORD),
    ENCOUNTER_MAP(SPECIES_NECROZMA),
    ENCOUNTER_MAP(SPECIES_MAGEARNA),
    ENCOUNTER_MAP(SPECIES_MARSHADOW),
    ENCOUNTER_MAP(SPECIES_POIPOLE),
    ENCOUNTER_MAP(SPECIES_NAGANADEL),
    ENCOUNTER_MAP(SPECIES_STAKATAKA),
    ENCOUNTER_MAP(SPECIES_BLACEPHALON),
    ENCOUNTER_MAP(SPECIES_ZERAORA),
    ENCOUNTER_MAP(SPECIES_MELTAN),
    ENCOUNTER_MAP(SPECIES_MELMETAL),

    ENCOUNTER_MAP(SPECIES_ZACIAN),
    ENCOUNTER_MAP(SPECIES_ZAMAZENTA),
    ENCOUNTER_MAP(SPECIES_ETERNATUS),
    ENCOUNTER_MAP(SPECIES_KUBFU),
    ENCOUNTER_MAP(SPECIES_URSHIFU),
    ENCOUNTER_MAP(SPECIES_ZARUDE),
    ENCOUNTER_MAP(SPECIES_REGIELEKI),
    ENCOUNTER_MAP(SPECIES_REGIDRAGO),
    ENCOUNTER_MAP(SPECIES_GLASTRIER),
    ENCOUNTER_MAP(SPECIES_SPECTRIER),
    ENCOUNTER_MAP(SPECIES_CALYREX),
    
    // Forms
    ENCOUNTER_MAP(SPECIES_KYUREM_WHITE),
    ENCOUNTER_MAP(SPECIES_KYUREM_BLACK),

    ENCOUNTER_MAP(SPECIES_NECROZMA_DUSK_MANE)
    ENCOUNTER_MAP(SPECIES_NECROZMA_DAWN_WINGS),
    ENCOUNTER_MAP(SPECIES_NECROZMA_ULTRA),
    
    ENCOUNTER_MAP(SPECIES_URSHIFU_RAPID_STRIKE_STYLE),
    ENCOUNTER_MAP(SPECIES_CALYREX_ICE_RIDER),
    ENCOUNTER_MAP(SPECIES_CALYREX_SHADOW_RIDER),
#endif
};

const struct RogueEncounterData gRogueSpecialEncounterInfo = 
{
    .mapCount = ARRAY_COUNT(sRouteMapsSpecial),
    .mapTable = sRouteMapsSpecial
};