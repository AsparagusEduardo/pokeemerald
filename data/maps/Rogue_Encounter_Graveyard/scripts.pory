const NPC_DEVIL_MAN = 4
const NPC_BALL_0 = 1
const NPC_BALL_1 = 2
const NPC_BALL_2 = 3

const VAR_ENTERED_GRAVEYARD = VAR_TEMP_0
const VAR_ITEM_INDEX = VAR_0x8000
const VAR_ITEM_ID_VAL = VAR_0x8001

const FLAG_USED_ENCOUNTER = FLAG_TEMP_1

mapscripts Rogue_Encounter_Graveyard_MapScripts 
{

}

script Rogue_Graveyard_ResurectionOption_UNUSED
{
    lock
    if(flag(FLAG_USED_ENCOUNTER))
    {
        msgbox(format("Good luck child..."))
    }
    else
    {
        msgbox(format("Hello child...\pYou seem to be struggling..."))

        if(var(VAR_ROGUE_MAX_PARTY_SIZE) > 2)
        {
            specialvar(VAR_0x8000, CalculatePlayerPartyCount)
            bufferitemname(STR_VAR_1, ITEM_REVIVAL_HERB)

            msgbox(format("I may be able to offer some help.\pI can give you a {STR_VAR_1} but it comes at a great cost...\pIt will reduce the number of POKéMON you may carry in you PARTY for the remainder of this adventure..."))

            checkitemspace(ITEM_REVIVAL_HERB)
            
            if(var(VAR_RESULT) == NO)
            {
                msgbox(format("Oh...\nIt looks like you're bag is too full...\pFree up some space if you are in need of my help..."))
            }
            else
            {
                msgbox(format("Would you like to accept my offer?"), MSGBOX_YESNO)

                if(var(VAR_RESULT) == YES)
                {
                    if(var(VAR_0x8000) >= VAR_ROGUE_MAX_PARTY_SIZE)
                    {
                        msgbox(format("You will have to release a POKéMON in order to continue..."))
                        fadescreen(FADE_TO_BLACK)
                        special(ChoosePartyMon)
                        waitstate
                    }
                    else
                    {
                        setvar(VAR_0x8004, 6) // Just needs to be too big
                    }

                    if(var(VAR_0x8004) == PARTY_NOTHING_CHOSEN)
                    {
                        msgbox(format("A courageous decision my child..."))
                    }
                    else
                    {
                        special(Rogue_ReducePartySize)
                        msgbox(format("And so it is done..."))
                        giveitem(ITEM_REVIVAL_HERB)
                        setflag(FLAG_USED_ENCOUNTER)

                        msgbox(format("Remember child...\pThat item may only be used during battle...\pDo not wait until it is too late to use it!"))
                    }

                }
                else
                {
                    msgbox(format("A courageous decision my child..."))
                }
            }
        }
        else
        {
            msgbox(format("However I'm afraid I can't help you any further..."))
            setflag(FLAG_USED_ENCOUNTER)
        }
    }
    release
}

script Rogue_Graveyard_EnterTrigger
{
    lock

    special(SpawnCameraObject)
    applymovement(OBJ_EVENT_ID_CAMERA, Graveyard_CameraInitialFocus)
    waitmovement(0)

    msgbox(format("???: One... choice..."), MSGBOX_DEFAULT)

    applymovement(OBJ_EVENT_ID_CAMERA, Graveyard_CameraInitialUnfocus)
    waitmovement(0)
    special(RemoveCameraObject)

    setvar(VAR_ENTERED_GRAVEYARD, 1)
    release
}

script Rogue_Graveyard_SelectOption_Internal {
    lockall

    bufferitemname(STR_VAR_1, VAR_ITEM_ID_VAL)
    
    msgbox(format("Choose {STR_VAR_1}?"), MSGBOX_YESNO)

    if(var(VAR_RESULT) == YES)
    {
        // Remove choice
        finditem(VAR_ITEM_ID_VAL, 1)

        playse(SE_THUNDER)

        removeobject(NPC_BALL_0, MAP_ROGUE_ENCOUNTER_GRAVEYARD)
        removeobject(NPC_BALL_1, MAP_ROGUE_ENCOUNTER_GRAVEYARD)
        removeobject(NPC_BALL_2, MAP_ROGUE_ENCOUNTER_GRAVEYARD)

        applymovement(NPC_DEVIL_MAN, Graveyard_Devil_Eyes)
        waitmovement(0)

        msgbox(format("???: One... price..."), MSGBOX_DEFAULT)

        // Give curse item which isn't one of the charm options
        giveitem(VAR_ROGUE_ITEM7, 1)

        applymovement(NPC_DEVIL_MAN, Graveyard_Devil_Leave)
        waitmovement(0)

        removeobject(NPC_DEVIL_MAN, MAP_ROGUE_ENCOUNTER_GRAVEYARD)
    }

    releaseall
}

script Rogue_Graveyard_SelectOption0 
{
    copyvar(VAR_ITEM_ID_VAL, VAR_ROGUE_ITEM0)
    call(Rogue_Graveyard_SelectOption_Internal)
}

script Rogue_Graveyard_SelectOption1
{
    copyvar(VAR_ITEM_ID_VAL, VAR_ROGUE_ITEM1)
    call(Rogue_Graveyard_SelectOption_Internal)
}

script Rogue_Graveyard_SelectOption2
{
    copyvar(VAR_ITEM_ID_VAL, VAR_ROGUE_ITEM2)
    call(Rogue_Graveyard_SelectOption_Internal)
}

movement Graveyard_CameraInitialFocus {
    walk_up * 3
}

movement Graveyard_CameraInitialUnfocus {
    walk_fast_down * 3
}

movement Graveyard_Devil_Eyes {
    face_left
}

movement Graveyard_Devil_Leave {
    walk_fast_up * 4
}