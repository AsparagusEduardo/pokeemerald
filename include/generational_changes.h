#ifndef GUARD_GENERATIONAL_CHANGES_H
#define GUARD_GENERATIONAL_CHANGES_H

#include "constants/generational_changes.h"
#include "config/battle.h"

static const u8 sGenerationalChanges[GEN_CONFIG_COUNT] =
{
    // Calculation settings
    [GEN_CONFIG_CRIT_CHANCE]                    = B_CRIT_CHANCE,
    [GEN_CONFIG_CRIT_MULTIPLIER]                = B_CRIT_MULTIPLIER,
    [GEN_CONFIG_PARALYSIS_SPEED]                = B_PARALYSIS_SPEED,
    [GEN_CONFIG_CONFUSION_SELF_DMG_CHANCE]      = B_CONFUSION_SELF_DMG_CHANCE,
    [GEN_CONFIG_MULTI_HIT_CHANCE]               = B_MULTI_HIT_CHANCE,
    //[GEN_CONFIG_WHITEOUT_MONEY]                 = B_WHITEOUT_MONEY,
    //[GEN_CONFIG_LIGHT_BALL_ATTACK_BOOST]        = B_LIGHT_BALL_ATTACK_BOOST,
    //[GEN_CONFIG_SANDSTORM_SPDEF_BOOST]          = B_SANDSTORM_SPDEF_BOOST,

    // Experience settings
    //[GEN_CONFIG_EXP_CATCH]                      = B_EXP_CATCH,
    //[GEN_CONFIG_TRAINER_EXP_MULTIPLIER]         = B_TRAINER_EXP_MULTIPLIER,
    //[GEN_CONFIG_SPLIT_EXP]                      = B_SPLIT_EXP,
    //[GEN_CONFIG_SCALED_EXP]                     = B_SCALED_EXP,
    //[GEN_CONFIG_UNEVOLVED_EXP_MULTIPLIER]       = B_UNEVOLVED_EXP_MULTIPLIER,

    // Stat settings
    //[GEN_CONFIG_BADGE_BOOST]                    = B_BADGE_BOOST,
    //[GEN_CONFIG_FRIENDSHIP_BOOST]               = B_FRIENDSHIP_BOOST,
    //[GEN_CONFIG_MAX_LEVEL_EV_GAINS]             = B_MAX_LEVEL_EV_GAINS,
    //[GEN_CONFIG_RECALCULATE_STATS]              = B_RECALCULATE_STATS,

    // Damage settings
    [GEN_CONFIG_BURN_DAMAGE]                    = B_BURN_DAMAGE,
    //[GEN_CONFIG_BURN_FACADE_DMG]                = B_BURN_FACADE_DMG,
    //[GEN_CONFIG_BINDING_DAMAGE]                 = B_BINDING_DAMAGE,
    //[GEN_CONFIG_PSYWAVE_DMG]                    = B_PSYWAVE_DMG,
    //[GEN_CONFIG_PAYBACK_SWITCH_BOOST]           = B_PAYBACK_SWITCH_BOOST,
    //[GEN_CONFIG_HIDDEN_POWER_DMG]               = B_HIDDEN_POWER_DMG,
    //[GEN_CONFIG_ROUGH_SKIN_DMG]                 = B_ROUGH_SKIN_DMG,
    //[GEN_CONFIG_KNOCK_OFF_DMG]                  = B_KNOCK_OFF_DMG,
    //[GEN_CONFIG_SPORT_DMG_REDUCTION]            = B_SPORT_DMG_REDUCTION,
    //[GEN_CONFIG_EXPLOSION_DEFENSE]              = B_EXPLOSION_DEFENSE,
    //[GEN_CONFIG_PARENTAL_BOND_DMG]              = B_PARENTAL_BOND_DMG,
    //[GEN_CONFIG_MULTIPLE_TARGETS_DMG]           = B_MULTIPLE_TARGETS_DMG,

    // Type settings
    //[GEN_CONFIG_GHOSTS_ESCAPE]                  = B_GHOSTS_ESCAPE,
    //[GEN_CONFIG_PARALYZE_ELECTRIC]              = B_PARALYZE_ELECTRIC,
    //[GEN_CONFIG_POWDER_GRASS]                   = B_POWDER_GRASS,
    //[GEN_CONFIG_UPDATED_TYPE_MATCHUPS]          = B_UPDATED_TYPE_MATCHUPS,
    //[GEN_CONFIG_PRANKSTER_DARK_TYPES]           = B_PRANKSTER_DARK_TYPES,
    //[GEN_CONFIG_SHEER_COLD_IMMUNITY]            = B_SHEER_COLD_IMMUNITY,
    //[GEN_CONFIG_ROOST_PURE_FLYING]              = B_ROOST_PURE_FLYING,
    //[GEN_CONFIG_STATUS_TYPE_IMMUNITY]           = B_STATUS_TYPE_IMMUNITY,

    // Turn settings
    //[GEN_CONFIG_BINDING_TURNS]                  = B_BINDING_TURNS,
    //[GEN_CONFIG_UPROAR_TURNS]                   = B_UPROAR_TURNS,
    //[GEN_CONFIG_UPROAR_IGNORE_SOUNDPROOF]       = B_UPROAR_IGNORE_SOUNDPROOF,
    //[GEN_CONFIG_DISABLE_TURNS]                  = B_DISABLE_TURNS,
    //[GEN_CONFIG_TAILWIND_TURNS]                 = B_TAILWIND_TURNS,
    //[GEN_CONFIG_SLEEP_TURNS]                    = B_SLEEP_TURNS,
    //[GEN_CONFIG_TAUNT_TURNS]                    = B_TAUNT_TURNS,
    //[GEN_CONFIG_SPORT_TURNS]                    = B_SPORT_TURNS,
    //[GEN_CONFIG_MEGA_EVO_TURN_ORDER]            = B_MEGA_EVO_TURN_ORDER,
    //[GEN_CONFIG_RECALC_TURN_AFTER_ACTIONS]      = B_RECALC_TURN_AFTER_ACTIONS,
    //[GEN_CONFIG_FAINT_SWITCH_IN]                = B_FAINT_SWITCH_IN,

    // Move data settings
    //[GEN_CONFIG_UPDATED_MOVE_DATA]              = B_UPDATED_MOVE_DATA,
    //[GEN_CONFIG_UPDATED_MOVE_TYPES]             = B_UPDATED_MOVE_TYPES,
    //[GEN_CONFIG_UPDATED_MOVE_FLAGS]             = B_UPDATED_MOVE_FLAGS,
    //[GEN_CONFIG_PHYSICAL_SPECIAL_SPLIT]         = B_PHYSICAL_SPECIAL_SPLIT,
    //[GEN_CONFIG_RECOIL_IF_MISS_DMG]             = B_RECOIL_IF_MISS_DMG,
    //[GEN_CONFIG_KLUTZ_FLING_INTERACTION]        = B_KLUTZ_FLING_INTERACTION,
    //[GEN_CONFIG_UPDATED_CONVERSION]             = B_UPDATED_CONVERSION,
    [GEN_CONFIG_UPDATED_CONVERSION_2]           = B_UPDATED_CONVERSION_2,
    //[GEN_CONFIG_PP_REDUCED_BY_SPITE]            = B_PP_REDUCED_BY_SPITE,
    //[GEN_CONFIG_EXTRAPOLATED_MOVE_FLAGS]        = B_EXTRAPOLATED_MOVE_FLAGS,

    // Ability data settings
    //[GEN_CONFIG_UPDATED_ABILITY_DATA]           = B_UPDATED_ABILITY_DATA,

    // Move accuracy settings
    [GEN_CONFIG_TOXIC_NEVER_MISS]               = B_TOXIC_NEVER_MISS,
    //[GEN_CONFIG_MINIMIZE_DMG_ACC]               = B_MINIMIZE_DMG_ACC,
    //[GEN_CONFIG_BLIZZARD_HAIL]                  = B_BLIZZARD_HAIL,
    //[GEN_CONFIG_SHEER_COLD_ACC]                 = B_SHEER_COLD_ACC,

    // Move stat change settings
    //[GEN_CONFIG_FELL_STINGER_STAT_RAISE]        = B_FELL_STINGER_STAT_RAISE,
    //[GEN_CONFIG_KINGS_SHIELD_LOWER_ATK]         = B_KINGS_SHIELD_LOWER_ATK,
    //[GEN_CONFIG_SPEED_BUFFING_RAPID_SPIN]       = B_SPEED_BUFFING_RAPID_SPIN,
    //[GEN_CONFIG_CHARGE_SPDEF_RAISE]             = B_CHARGE_SPDEF_RAISE,
    //[GEN_CONFIG_MINIMIZE_EVASION]               = B_MINIMIZE_EVASION,
    //[GEN_CONFIG_GROWTH_STAT_RAISE]              = B_GROWTH_STAT_RAISE,
    [GEN_CONFIG_FOCUS_ENERGY_CRIT_RATIO]        = B_FOCUS_ENERGY_CRIT_RATIO,

    // Other move settings
    //[GEN_CONFIG_INCINERATE_GEMS]                = B_INCINERATE_GEMS,
    //[GEN_CONFIG_CAN_SPITE_FAIL]                 = B_CAN_SPITE_FAIL,
    //[GEN_CONFIG_CRASH_IF_TARGET_IMMUNE]         = B_CRASH_IF_TARGET_IMMUNE,
    //[GEN_CONFIG_MEMENTO_FAIL]                   = B_MEMENTO_FAIL,
    //[GEN_CONFIG_GLARE_GHOST]                    = B_GLARE_GHOST,
    //[GEN_CONFIG_SKILL_SWAP]                     = B_SKILL_SWAP,
    //[GEN_CONFIG_BRICK_BREAK]                    = B_BRICK_BREAK,
    //[GEN_CONFIG_WISH_HP_SOURCE]                 = B_WISH_HP_SOURCE,
    //[GEN_CONFIG_RAMPAGE_CANCELLING]             = B_RAMPAGE_CANCELLING,
    //[GEN_CONFIG_HEAL_BLOCKING]                  = B_HEAL_BLOCKING,
    //[GEN_CONFIG_ROOTED_GROUNDING]               = B_ROOTED_GROUNDING,
    //[GEN_CONFIG_METRONOME_MOVES]                = B_METRONOME_MOVES,
    //[GEN_CONFIG_TELEPORT_BEHAVIOR]              = B_TELEPORT_BEHAVIOR,
    //[GEN_CONFIG_BEAT_UP]                        = B_BEAT_UP,
    //[GEN_CONFIG_DARK_VOID_FAIL]                 = B_DARK_VOID_FAIL,
    //[GEN_CONFIG_BURN_HIT_THAW]                  = B_BURN_HIT_THAW,
    //[GEN_CONFIG_HEALING_WISH_SWITCH]            = B_HEALING_WISH_SWITCH,
    //[GEN_CONFIG_DEFOG_EFFECT_CLEARING]          = B_DEFOG_EFFECT_CLEARING,
    //[GEN_CONFIG_STOCKPILE_RAISES_DEFS]          = B_STOCKPILE_RAISES_DEFS,
    //[GEN_CONFIG_TRANSFORM_SHINY]                = B_TRANSFORM_SHINY,
    //[GEN_CONFIG_TRANSFORM_FORM_CHANGES]         = B_TRANSFORM_FORM_CHANGES,
    //[GEN_CONFIG_WIDE_GUARD]                     = B_WIDE_GUARD,
    //[GEN_CONFIG_QUICK_GUARD]                    = B_QUICK_GUARD,
    //[GEN_CONFIG_IMPRISON]                       = B_IMPRISON,
    //[GEN_CONFIG_ALLY_SWITCH_FAIL_CHANCE]        = B_ALLY_SWITCH_FAIL_CHANCE,
    //[GEN_CONFIG_SKETCH_BANS]                    = B_SKETCH_BANS,
    //[GEN_CONFIG_KNOCK_OFF_REMOVAL]              = B_KNOCK_OFF_REMOVAL,
    //[GEN_CONFIG_HEAL_BELL_SOUNDPROOF]           = B_HEAL_BELL_SOUNDPROOF,
    //[GEN_CONFIG_CHARGE]                         = B_CHARGE,
    //[GEN_CONFIG_POWDER_RAIN]                    = B_POWDER_RAIN,
    //[GEN_CONFIG_AFTER_YOU_TURN_ORDER]           = B_AFTER_YOU_TURN_ORDER,
    //[GEN_CONFIG_QUASH_TURN_ORDER]               = B_QUASH_TURN_ORDER,

    // Ability settings
    //[GEN_CONFIG_ABILITY_WEATHER]                = B_ABILITY_WEATHER,
    [GEN_CONFIG_GALE_WINGS]                     = B_GALE_WINGS,
    //[GEN_CONFIG_STANCE_CHANGE_FAIL]             = B_STANCE_CHANGE_FAIL,
    //[GEN_CONFIG_SHADOW_TAG_ESCAPE]              = B_SHADOW_TAG_ESCAPE,
    //[GEN_CONFIG_MOODY_ACC_EVASION]              = B_MOODY_ACC_EVASION,
    //[GEN_CONFIG_FLASH_FIRE_FROZEN]              = B_FLASH_FIRE_FROZEN,
    //[GEN_CONFIG_SYNCHRONIZE_TOXIC]              = B_SYNCHRONIZE_TOXIC,
    //[GEN_CONFIG_UPDATED_INTIMIDATE]             = B_UPDATED_INTIMIDATE,
    //[GEN_CONFIG_OBLIVIOUS_TAUNT]                = B_OBLIVIOUS_TAUNT,
    //[GEN_CONFIG_STURDY]                         = B_STURDY,
    //[GEN_CONFIG_PLUS_MINUS_INTERACTION]         = B_PLUS_MINUS_INTERACTION,
    //[GEN_CONFIG_WEATHER_FORMS]                  = B_WEATHER_FORMS,
    //[GEN_CONFIG_SYMBIOSIS_GEMS]                 = B_SYMBIOSIS_GEMS,
    //[GEN_CONFIG_ABSORBING_ABILITY_STRING]       = B_ABSORBING_ABILITY_STRING,
    //[GEN_CONFIG_REDIRECT_ABILITY_IMMUNITY]      = B_REDIRECT_ABILITY_IMMUNITY,
    //[GEN_CONFIG_REDIRECT_ABILITY_ALLIES]        = B_REDIRECT_ABILITY_ALLIES,
    //[GEN_CONFIG_LEAF_GUARD_PREVENTS_REST]       = B_LEAF_GUARD_PREVENTS_REST,
    //[GEN_CONFIG_SNOW_WARNING]                   = B_SNOW_WARNING,
    //[GEN_CONFIG_TRANSISTOR_BOOST]               = B_TRANSISTOR_BOOST,
    //[GEN_CONFIG_ILLUMINATE_EFFECT]              = B_ILLUMINATE_EFFECT,
    //[GEN_CONFIG_WEAK_ARMOR_SPEED]               = B_WEAK_ARMOR_SPEED,
    //[GEN_CONFIG_PROTEAN_LIBERO]                 = B_PROTEAN_LIBERO,
    //[GEN_CONFIG_INTREPID_SWORD]                 = B_INTREPID_SWORD,
    //[GEN_CONFIG_DAUNTLESS_SHIELD]               = B_DAUNTLESS_SHIELD,
    //[GEN_CONFIG_DISGUISE_HP_LOSS]               = B_DISGUISE_HP_LOSS,
    //[GEN_CONFIG_ABILITY_TRIGGER_CHANCE]         = B_ABILITY_TRIGGER_CHANCE,
    //[GEN_CONFIG_PICKUP_WILD]                    = B_PICKUP_WILD,
    //[GEN_CONFIG_MAGIC_GUARD]                    = B_MAGIC_GUARD,
};

#if TESTING
extern u8 *gGenerationalChangesTestOverride;
#endif

static inline u32 GetGenConfig(enum GenConfigTag configTag)
{
    if (configTag >= GEN_CONFIG_COUNT) return GEN_LATEST;
#if TESTING
    if (gGenerationalChangesTestOverride == NULL) return sGenerationalChanges[configTag];
    return gGenerationalChangesTestOverride[configTag];
#else
    return sGenerationalChanges[configTag];
#endif
}

static inline void SetGenConfig(enum GenConfigTag configTag, u32 value)
{
#if TESTING
    if (configTag >= GEN_CONFIG_COUNT) return;
    if (gGenerationalChangesTestOverride == NULL) return;
    gGenerationalChangesTestOverride[configTag] = value;
#endif
}

#if TESTING
void TestInitConfigData(void);
void TestFreeConfigData(void);
#endif

#endif // GUARD_GENERATIONAL_CHANGES_H
